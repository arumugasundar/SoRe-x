// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name String
  email String @unique
  phone String @unique
  password String

  gender String
  age String
  active Boolean
  
}

model Department {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  email String
  phone String
  password String

  secretary String
  pincode String
  
}

model Investor {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  email String
  phone String
  password String

  preferences String[]
  margin String
  risk String
  vision String
  expertise String[]
}

model Entreprenuer {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  email String
  phone String
  password String

  organization String
  description String
  location String
  vision String
  achievements String[]
  established_since Int
  workforce_count Int
  roadmap String
}

model Issue {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description String
  reported_user_id String
  status String
  concern_department String
  supporting_images String[]
  severity String
  reason_for_severity String
  acknowledged Boolean
  response_from_department String
  resolution_id String
  resolved Boolean
  status_updates Json[]
  issue_persists_since DateTime

}

model Resolution {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  issue_solved_date DateTime
  supporting_images String[]
  description String
  status String
}

model BusinessIdeas {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  entreprenuer_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  description String
  funding_needed String
  use_of_funds String
  impact_metrics String[]
  project_stage String
  partnerships String[]
  long_term_vision String
}

model OTP {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  value String @unique
  otp String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}